@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@Styles.Render("~/Content/own.css")
<div data-ng-app="GradeInkApp" class="col-md-10 ng-cloak">
    <div ng-controller="assignmentListController as assngmntListCtrl">
        <h1><i class="glyphicon glyphicon-list-alt"></i> &nbsp All Assignments</h1>
        <div class="row">
            <div class="col-md-11 panel-primary">
                <div class="content-box-header panel-heading">
                    <div class="panel-title"><b>Quick Search </b></div>
                    <div class="panel-options">
                    </div>
                </div>
                <div class="content-box-large box-with-header">
                    <!---->
                    <div class="buttonDivider"></div>
                    <div class="form-group">
                        <span class="col-md-1">
                            <label for="searchFilter" style="float:right;"><b>Find Assignment:</b></label>
                        </span>
                        <span class="col-md-2">
                            <input type="text"
                                   name="searchFilter"
                                   id="searchFilter"
                                   class="form-control"
                                   placeholder="Assignment Id or Name"
                                   ng-model="searchText">
                        </span>
                        <span class="col-md-2">
                            <label for="classFilter" style="float:right;"><b>Sort By Class:</b></label>
                        </span>
                        <span class="col-md-2">
                            <select class="form-control"
                                    id="classFilter"
                                    name="classFilter"
                                    ng-model="classFilter"
                                    ng-options="class.value as class.key for class in assngmntListCtrl.classListArr">
                                <option disabled selected value="">--Select an option--</option>
                            </select>
                        </span>
                        <span class="col-md-2">
                            <label for="xxxxxxx" style="float:right;"><b>Sort By School:</b></label>
                        </span>
                        <span class="col-md-2">
                            <select class="form-control"
                                    id="xxxxxxx"
                                    name="xxxxxxx"
                                    ng-model="xxxxxxx">
                                <option disabled selected value="">--Select an option--</option>
                            </select>
                        </span>
                    </div>
                    <!---->
                    <br />
                    <br />
                </div>
            </div>
        </div>
        <!---->
        <div class="row">
            <div class="col-md-11 panel-success">
                <div class="content-box-header panel-heading">
                    <div class="panel-title"><b>Assignment Entries </b></div>
                    <div class="panel-options">
                        @*<a href="#" data-rel="collapse"><i class="glyphicon glyphicon-refresh"></i></a>
                            <a href="#" data-rel="reload"><i class="glyphicon glyphicon-cog"></i></a>*@
                    </div>
                </div>
                <div class="content-box-large box-with-header">
                    <!---->
                    <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered dataTable" id="classPeriodTable" aria-describedby="example_info">
                        <thead>
                            <tr role="row">
                                <th class="sorting_asc" role="columnheader" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending" style="width: 50px;">
                                    <font size="2">Id</font>
                                </th>
                                <th class="sorting" role="columnheader" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Browser: activate to sort column ascending" style="width: 324px;">
                                    <font size="2">Assignment Name</font>
                                </th>
                                <th class="sorting" role="columnheader" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Platform(s): activate to sort column ascending" style="width: 150px;">
                                    <font size="2">Assignment Type</font>
                                </th>
                                <th class="sorting" role="columnheader" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Engine version: activate to sort column ascending" style="width: 70px;">
                                    <font size="2">Period</font>
                                </th>
                                <th class="sorting" role="columnheader" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Engine version: activate to sort column ascending" style="width: 100px;">
                                    <font size="2">Total Points</font>
                                </th>
                                <th class="sorting" role="columnheader" tabindex="0" aria-controls="example" rowspan="1" colspan="1" style="width: 100px;">
                                    <font size="2">DateAdded</font>
                                </th>
                                <th class="sorting" role="columnheader" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="CSS grade: activate to sort column ascending" style="width: 349px;">
                                    <font size="2">Modify Assignment</font>
                                </th>
                            </tr>
                        </thead>

                        <tbody role="alert" aria-live="polite" aria-relevant="all">
                            <tr class="gradeA odd" ng-repeat="assignment in assngmntListCtrl.assignmentListArr | filter:searchText | filter: {Period: classFilter}" ng-class="assngmntListCtrl.mostRecentAddedEntry==assignment.AssignmentId? 'borderHighlight': ''">
                                <td class="sorting_1">{{assignment.AssignmentId}}</td>
                                <td class="">{{assignment.AssignmentName}}</td>
                                <td class="">{{assignment.AssignmentTypeId | assignmentTypeFilter}}</td>
                                <td class="center">{{assignment.Period}}</td>
                                <td class="center">{{assignment.TotalPoints}}</td>
                                <td class="center">{{assignment.DateAdded | date:'MM/dd/yyyy'}}</td>
                                <td class="center">
                                    <div class="buttonDivider"></div>
                                    <button type="button" class="btn-small btn-info" ng-click="usrListCtrl.viewUserProfile(user.Id)">Assignment Stats</button>
                                    <div class="buttonDivider"></div>
                                    <div class="buttonDivider"></div>
                                    <button type="button" class="btn-small btn-primary" data-toggle="modal" data-target="#editUserModal" ng-click="assngmntListCtrl.getAssignmentEditInfo(assignment.AssignmentId)">Edit Entry</button>
                                    <div class="buttonDivider"></div>
                                    <div class="buttonDivider"></div>
                                    <button type="button" class="btn-small btn-danger" ng-click="assngmntListCtrl.deleteAssignment(assignment.AssignmentId)">Delete</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <!---->
                </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="editUserModal" role="dialog">
            <div class="modal-dialog modal-lg">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Edit Assignment {{assngmntListCtrl.editInfo.assignmentId}}</h4>
                    </div>
                    <div class="modal-body" style="height: 170px;">
                        <!--form in modal-->
                        <form name="assngmntListCtrl.editAssignmentForm" id="editAssignmentForm" role="form" novalidate>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-md-10">
                                        <label for="editAssignmentName">Assignment Name</label>
                                        <input type="text"
                                               name="editAssignmentName"
                                               id="editAssignmentName"
                                               class="form-control"
                                               ng-model="assngmntListCtrl.editInfo.assignmentName"
                                               ng-class="{'error': assngmntListCtrl.isEditButtonClicked && !assngmntListCtrl.editAssignmentForm.editAssignmentName.$valid}"
                                               ng-minlength="2"
                                               ng-maxlength="100"
                                               required />
                                        <div role="alert" class="help-inline error">
                                            <span class="error" ng-show="assngmntListCtrl.isEditButtonClicked && assngmntListCtrl.editAssignmentForm.editAssignmentName.$error.required">Must be at least 2 characters long.</span>
                                        </div>
                                    </div>
                                </div>

                                <!---->
                                <div class="col-md-3" style="padding-top: 20px">
                                    <label for="editPeriod">Period</label>
                                    <input type="text"
                                           name="editPeriod"
                                           id="editPeriod"
                                           class="form-control"
                                           ng-model="assngmntListCtrl.editInfo.period"
                                           required />
                                    <div role="alert" class="help-inline error">
                                        <span class="error" ng-show="assngmntListCtrl.isEditButtonClicked && assngmntListCtrl.editAssignmentForm.editPeriod.$error.required">Select a class.</span>
                                    </div>
                                </div>
                                <!---->
                                <div class="col-md-3" style="padding-top: 20px">
                                    <label for="editUserType">Assignment Type</label>
                                    <input type="text"
                                           name="editAssignmentType"
                                           id="editAssignmentType"
                                           class="form-control"
                                           ng-model="assngmntListCtrl.editInfo.assignmentTypeId"
                                           ng-class="{'error': assngmntListCtrl.isEditButtonClicked && !assngmntListCtrl.editAssignmentForm.editAssignmentType.$valid}"
                                           required />
                                    <div role="alert" class="help-inline error">
                                        <span class="error" ng-show="assngmntListCtrl.isEditButtonClicked && assngmntListCtrl.editAssignmentForm.editAssignmentType.$error.required">Select assignment type.</span>
                                    </div>
                                </div>

                                <!---->
                                <div class="col-md-3" style="padding-top: 20px">
                                    <label for="editTotalPoints">Total Points</label>
                                    <input type="number"
                                           name="editTotalPoints"
                                           id="editTotalPoints"
                                           class="form-control"
                                           ng-model="assngmntListCtrl.editInfo.totalPoints"
                                           min="0"
                                           ng-class="{'error': assngmntListCtrl.isEditButtonClicked && !assngmntListCtrl.editAssignmentForm.editTotalPoints.$valid}" />
                                    <div role="alert" class="help-inline error">
                                        <span class="error" ng-show="assngmntListCtrl.isEditButtonClicked && assngmntListCtrl.editAssignmentForm.editTotalPoints.$error.min">Value cannot be negative.</span>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <!--end form-->
                    </div>
                    <div class="modal-footer">
                        <button type="button" ng-class="assngmntListCtrl.editAssignmentForm.$valid? '': 'disabled'" class="btn btn-primary" ng-click="assngmntListCtrl.editAssignmentInfo(assngmntListCtrl.editInfo.assignmentId, assngmntListCtrl.editInfo)" data-dismiss="modal">Edit Assignment</button>
                        <div class="buttonDivider"></div>
                        <div class="buttonDivider"></div>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/services.users.js">        //the service object is in here</script>
    <script src="~/Scripts/services.assignments.js"></script>
    <script type="text/javascript">
        var APPNAME = 'GradeInkApp';

        var myApp = angular.module(APPNAME, []);

        myApp.controller('assignmentListController', ['$scope', function ($scope) {

            var vm = this;
            vm.$scope = $scope;
            vm.editInfo = {};
            vm.assignmentListArr = null;
            vm.mostRecentAddedEntry = null;
            vm.editAssignmentForm = null;
            vm.isEditButtonClicked = false;

            vm.onGetSuccess = _onGetSuccess;
            vm.onGetError = _onGetError;
            vm.deleteAssignment = _deleteAssignment;
            vm.deleteAssignmentSuccess = _deleteAssignmentSuccess;
            vm.deleteAssignmentError = _deleteAssignmentError;
            //edit
            vm.editAssignmentInfo = _editAssignmentInfo;
            vm.editAssignmentInfoSuccess = _editAssignmentInfoSuccess;
            vm.editAssignmentInfoError = _editAssignmentInfoError;
            vm.getAssignmentEditInfo = _getAssignmentEditInfo;
            vm.getAssignmentEditInfoSuccess = _getAssignmentEditInfoSuccess;
            vm.getAssignmentEditInfoError = _getAssignmentEditInfoError;

            vm.classListArr = [{ key: "Period 1", value: 1 },
            { key: "Period 2", value: 2 },
            { key: "Period 3", value: 3 },
            { key: "Period 4", value: 4 },
            { key: "Period 5", value: 5 },
            { key: "Period 6", value: 6 },
            { key: "Period 7", value: 7 },
            { key: "Period 8", value: 8 },
            { key: "All", value: '' }];


            render();

            function render() {
                services.assignments.getAllAssignments(vm.onGetSuccess, vm.onGetError);
            }

            function _onGetSuccess(data) {
                console.log(data);
                vm.$scope.$apply(vm.assignmentListArr = data.Items);
            }

            function _onGetError() {
                console.log("failed to get all assignments");
            }

            function _deleteAssignment(id) {
                if (confirm('Are you sure you want to delete user ' + id + '?')) {
                    services.assignments.deleteAssignment(id, vm.deleteAssignmentSuccess, vm.deleteAssignmentError);
                }
                else {
                    return;
                }
            }

            function _deleteAssignmentSuccess() {
                services.assignments.getAllAssignments(vm.onGetSuccess, vm.onGetError);
            }

            function _deleteAssignmentError() {
                console.log("error when deleting assignment.");
            }

            function _getAssignmentEditInfo(id) {
                services.assignments.getAssignmentById(id, vm.getAssignmentEditInfoSuccess, vm.getAssignmentEditInfoError);
            }

            function _getAssignmentEditInfoSuccess(data) {
                vm.$scope.$apply(function () {
                    vm.editInfo.assignmentId = data.Item.AssignmentId;
                    vm.editInfo.assignmentName = data.Item.AssignmentName;
                    vm.editInfo.period = data.Item.Period;
                    vm.editInfo.assignmentTypeId = data.Item.AssignmentTypeId;
                    vm.editInfo.totalPoints = data.Item.TotalPoints;
                });
                console.log(data);
            }

            function _getAssignmentEditInfoError() {
                console.log("could not get user info for edit.");
            }

            function _editAssignmentInfo(id, editInfo) {
                vm.isEditButtonClicked = true;
                if (vm.editAssignmentForm.$valid) {
                    services.assignments.edit(id, editInfo, vm.editAssignmentInfoSuccess, vm.editAssignmentInfoError);
                }

                else {
                    console.log("invalid edit form input.");
                }
            }

            function _editAssignmentInfoSuccess() {
                vm.$scope.$apply(function () {
                    vm.mostRecentAddedEntry = vm.editInfo.assignmentId;
                })

                services.assignments.getAllAssignments(vm.onGetSuccess, vm.onGetError);
            }

            function _editAssignmentInfoError() {
                console.log('edit failed.');
            }


        }])

        myApp.filter('assignmentTypeFilter', [function () {
            return function (assignmentTypeId) {
                switch (assignmentTypeId) {
                    case 1:
                        return "Homework";
                    case 2:
                        return "Quiz";
                    case 3:
                        return "Test";
                    case 4:
                        return "Project";
                    case 5:
                        return "Extra Credit";
                }
            }
        }])

    </script>

}

